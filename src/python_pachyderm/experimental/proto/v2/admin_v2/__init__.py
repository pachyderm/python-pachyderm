# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: python_pachyderm/proto/v2/admin/admin.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import Dict, List

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase
import grpclib


@dataclass(eq=False, repr=False)
class ClusterInfo(betterproto.Message):
    id: str = betterproto.string_field(1)
    deployment_id: str = betterproto.string_field(2)
    version_warnings_ok: bool = betterproto.bool_field(3)
    version_warnings: List[str] = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class InspectClusterRequest(betterproto.Message):
    client_version: "_versionpb_v2__.Version" = betterproto.message_field(1)


class ApiStub(betterproto.ServiceStub):
    async def inspect_cluster(
        self, *, client_version: "_versionpb_v2__.Version" = None
    ) -> "ClusterInfo":

        request = InspectClusterRequest()
        if client_version is not None:
            request.client_version = client_version

        return await self._unary_unary(
            "/admin_v2.API/InspectCluster", request, ClusterInfo
        )


class ApiBase(ServiceBase):
    async def inspect_cluster(
        self, client_version: "_versionpb_v2__.Version"
    ) -> "ClusterInfo":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def __rpc_inspect_cluster(self, stream: grpclib.server.Stream) -> None:
        request = await stream.recv_message()

        request_kwargs = {
            "client_version": request.client_version,
        }

        response = await self.inspect_cluster(**request_kwargs)
        await stream.send_message(response)

    def __mapping__(self) -> Dict[str, grpclib.const.Handler]:
        return {
            "/admin_v2.API/InspectCluster": grpclib.const.Handler(
                self.__rpc_inspect_cluster,
                grpclib.const.Cardinality.UNARY_UNARY,
                InspectClusterRequest,
                ClusterInfo,
            ),
        }


from .. import versionpb_v2 as _versionpb_v2__
